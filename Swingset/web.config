<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="esapi" type="Owasp.Esapi.Configuration.EsapiConfig"/>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" requirePermission="false"/>
  </configSections>
  <system.net>
    <mailSettings>
      <smtp deliveryMethod="SpecifiedPickupDirectory" from="dot-net-esapi@owasp.com">
        <specifiedPickupDirectory pickupDirectoryLocation="D:\temp\maildrop\"/>
      </smtp>
    </mailSettings>
  </system.net>
  <!--
    For a description of web.config changes see http://go.microsoft.com/fwlink/?LinkId=235367.

    The following attributes can be set on the <httpRuntime> tag.
      <system.Web>
        <httpRuntime targetFramework="4.5" />
      </system.Web>
  -->
  <system.web>
    <!--
            Set compilation debug="true" to insert debugging
            symbols into the compiled page. Because this
            affects performance, set this value to true only
            during development.

            Security note: This value should not be true in any production deployment.
        -->
    <compilation debug="true" targetFramework="4.5">
      <!--
      <assemblies>
        <add assembly="System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
        <add assembly="System.Data.DataSetExtensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
        <add assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
        <add assembly="System.Xml.Linq, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
      </assemblies>
      -->
    </compilation>
    <roleManager enabled="true"/>
    <membership>
      <providers>
        <remove name="AspNetSqlMembershipProvider"/>
        <add name="AspNetSqlMembershipProvider" type="System.Web.Security.SqlMembershipProvider, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" connectionStringName="LocalSqlServer" enablePasswordRetrieval="false" enablePasswordReset="true" requiresQuestionAndAnswer="true" applicationName="/" requiresUniqueEmail="true" passwordFormat="Hashed" maxInvalidPasswordAttempts="5" passwordAttemptWindow="10" minRequiredPasswordLength="1" minRequiredNonalphanumericCharacters="0" passwordStrengthRegularExpression="^(?=.{8,})(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*\W).*$"/>
      </providers>
    </membership>
    <!--
            The <authntication> section enables configuration
            of the security authentication mode used by
            ASP.NET to identify an incoming user.

            Security note: Forms authentication is a standard, secure way to authenticate users.
     -->
    <authentication mode="Forms">
      <forms cookieless="UseCookies" defaultUrl="Login.aspx" enableCrossAppRedirects="false" loginUrl="Login.aspx" requireSSL="false" name=".ESAPI_FORMSAUTHENTICATION" protection="All" slidingExpiration="false" timeout="10"/>
    </authentication>
    <!--
            The <customErrors> section enables configuration
            of what to do if/when an unhandled error occurs
            during the execution of a request. Specifically,
            it enables developers to configure html error pages
            to be displayed in place of a error stack trace.

            Security note: Custom error prevents detailed error information from being displayed to users. Do not disable. Fix
    -->
    <customErrors mode="Off"/>
    <!--" defaultRedirect="Error.aspx" />
    -->
    <!--
            Security note: HTTP Only cookies should always be used. requireSSL should be set to true for all sites that use SSL.
    -->
    <httpCookies httpOnlyCookies="true" requireSSL="false"/>
    <!--
      <machineKey />
    -->
    <pages viewStateEncryptionMode="Always" controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID"/>
    <!--
    -->
    <sessionState cookieless="false" cookieName=".ESAPI_SESSIONID" regenerateExpiredSessionId="true" timeout="10"/>
    <!--
    -->
    <trace enabled="false"/>
    <!--
    -->
    <trust level="Full"/>
    <!--

    <httpHandlers>
      <remove verb="*" path="*.asmx"/>
      <add verb="*" path="*.asmx" validate="false" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
      <add verb="*" path="*_AppService.axd" validate="false" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
      <add verb="GET,HEAD" path="ScriptResource.axd" type="System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" validate="false"/>
    </httpHandlers>
    -->
    <httpModules>
      <add name="esapiRuntime" type="Owasp.Esapi.Runtime.EsapiRuntimeModule"/>
    </httpModules>
  </system.web>
<system.webServer>

    <modules>
      <remove name="FormsAuthentication" />
      <add name="esapiRuntime" type="Owasp.Esapi.Runtime.EsapiRuntimeModule"/>
    </modules>
    <handlers>
      <remove name="ExtensionlessUrlHandler-Integrated-4.0" />
      <remove name="OPTIONSVerbHandler" />
      <remove name="TRACEVerbHandler" />
      <add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="*" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />


      <!-- By default any URL with a file extension is assumed to be a static file and MVC routing is not used.
           Here we enable MVC routing for opensearch.xml, robots.txt and sitemap.xml files. -->
      <add name="OpenSearchXml" path="opensearch.xml" verb="GET" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
      <add name="RobotsText" path="robots.txt" verb="GET" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
      <add name="SitemapXml" path="sitemap.xml" verb="GET" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
    </handlers>
    <!-- httpCompression - GZip compress static file content. Overrides the server default which only compresses static files over 2700 bytes.
         See http://zoompf.com/blog/2012/02/lose-the-wait-http-compression and
         http://www.iis.net/configreference/system.webserver/httpcompression -->
    <!-- minFileSizeForComp - The minimum file size to compress. -->
    <httpCompression directory="%SystemDrive%\inetpub\temp\IIS Temporary Compressed Files" minFileSizeForComp="1024">
      <scheme name="gzip" dll="%Windir%\system32\inetsrv\gzip.dll" />
      <dynamicTypes>
        <add mimeType="text/*" enabled="true" />
        <add mimeType="message/*" enabled="true" />
        <add mimeType="application/x-javascript" enabled="true" />

        <!-- Compress XML files -->
        <add mimeType="application/xml" enabled="true" />
        <!-- Compress JavaScript files -->
        <add mimeType="application/javascript" enabled="true" />
        <!-- Compress JSON files -->
        <add mimeType="application/json" enabled="true" />
        <!-- Compress SVG files -->
        <add mimeType="image/svg+xml" enabled="true" />
        <!-- Compress RSS feeds -->
        <add mimeType="application/rss+xml" enabled="true" />
        <!-- Compress Atom feeds -->
        <add mimeType="application/atom+xml" enabled="true" />

        <add mimeType="*/*" enabled="false" />
      </dynamicTypes>
      <staticTypes>
        <add mimeType="text/*" enabled="true" />
        <add mimeType="message/*" enabled="true" />
        <add mimeType="application/x-javascript" enabled="true" />
        <add mimeType="application/atom+xml" enabled="true" />
        <add mimeType="application/xaml+xml" enabled="true" />

        <!-- Compress ICO icon files (Note that most .ico files are uncompressed but there are some that can contain PNG compressed images. If you are doing this, remove this line). -->
        <add mimeType="image/x-icon" enabled="true" />
        <!-- Compress XML files -->
        <add mimeType="application/xml" enabled="true" />
        <add mimeType="application/xml; charset=UTF-8" enabled="true" />
        <!-- Compress JavaScript files -->
        <add mimeType="application/javascript" enabled="true" />
        <!-- Compress JSON files -->
        <add mimeType="application/json" enabled="true" />
        <!-- Compress SVG files -->
        <add mimeType="image/svg+xml" enabled="true" />
        <!-- Compress EOT font files -->
        <add mimeType="application/vnd.ms-fontobject" enabled="true" />
        <!-- Compress TTF font files - application/font-ttf will probably be the new correct MIME type. IIS still uses application/x-font-ttf. -->
        <!--<add mimeType="application/font-ttf" enabled="true" />-->
        <add mimeType="application/x-font-ttf" enabled="true" />
        <!-- Compress OTF font files - application/font-opentype will probably be the new correct MIME type. IIS still uses font/otf. -->
        <!--<add mimeType="application/font-opentype" enabled="true" />-->
        <add mimeType="font/otf" enabled="true" />
        <!-- Compress RSS feeds -->
        <add mimeType="application/rss+xml" enabled="true" />
        <add mimeType="application/rss+xml; charset=UTF-8" enabled="true" />

        <add mimeType="*/*" enabled="false" />
      </staticTypes>
    </httpCompression>
    <httpProtocol>
      <customHeaders>
        <!-- X-Powered-By - Remove the HTTP header for added security and a slight performance increase. -->
        <clear />
        <!-- X-UA-Compatible - Ensure that IE and Chrome frame is using the latest rendering mode. Alternatively, use the HTML meta tag X-UA-Compatible "IE=edge" -->
        <add name="X-UA-Compatible" value="IE=edge,chrome=1" />
      </customHeaders>
    </httpProtocol>
    <security>
      <!-- Enable Dynamic IP Security. During a Denial of Service (DoS) attack, a very simple and small 403.501 or 403.502 Forbidden static error page is displayed.
           See http://www.iis.net/configreference/system.webserver/security/dynamicipsecurity -->
      <!-- enableLoggingOnlyMode - Specifies that IIS will log requests from the client that would be rejected without actually rejecting them.
                                   After running your site for a while, and searching the IIS logs for 403.501 and 403.502 errors, set sensible limits below.
                                   Note: Google and Bing make large numbers of requests at times and can look like a DoS attack. -->
      <!-- enableProxyMode - Set this to true if you are behind a proxy. -->
      <dynamicIpSecurity enableLoggingOnlyMode="true">
        <!-- maxConcurrentRequests - The number of concurrent HTTP connection requests from a client that will result in the client being blocked. -->
        <denyByConcurrentRequests enabled="true" maxConcurrentRequests="20" />
        <!-- maxRequests - The number of requests received from a specific client over a specified period of time that will result in the client being blocked (if the check is enabled). -->
        <!-- requestIntervalInMilliseconds - The period of time (in milliseconds) that is used to determine the request rate for a specific client. This rate is used to determine whether the receive rate exceeds that the maximum specified, resulting in the client being blocked (if the check is enabled). -->
        <denyByRequestRate enabled="true" maxRequests="30" requestIntervalInMilliseconds="300" />
      </dynamicIpSecurity>
      <requestFiltering>
        <!-- maxAllowedContentLength - Specifies the maximum length of content in a request, in bytes. The default value is 30000000 (~28.6 MB) and has
                                       been reduced to 1048576 (1 MB). This setting is for IIS while the httpRuntime maxRequestLength setting is
                                       for ASP.NET, you need to set both to the same value or the smaller number wins (See http://stackoverflow.com/questions/6327452/which-gets-priority-maxrequestlength-or-maxallowedcontentlength). -->
        <!-- maxQueryString - Specifies the maximum length of the query string, in bytes. The default value is 2048. This setting is for IIS while the
                              httpRuntime maxQueryStringLength setting is for ASP.NET, you need to set both to the same value. -->
        <!-- maxUrl - Specifies maximum length of the URL, in bytes. The default value is 4096. This setting is for IIS while the
                      httpRuntime maxUrlLength setting is for ASP.NET, you need to set both to the same value. -->
        <requestLimits maxAllowedContentLength="1048576" maxQueryString="2048" maxUrl="4096" />
      </requestFiltering>
    </security>
    <staticContent>
      <!-- clientCache - Enable client caching of static files like images. By default each static file is given an ETag (like a fingerprint).
           See http://www.iis.net/configreference/system.webserver/staticcontent/clientcache -->
      <!-- cacheControlCustom - Set the Cache-Control HTTP header to a public cache so it is cached by the browser and any proxies. -->
      <!-- cacheControlMode=UseMaxAge - Adds a Cache-Control: max-age=<nnn> header to the response based on the value specified in the CacheControlMaxAge attribute. -->
      <!-- cacheControlMaxAge - Set the maximum age to one year. -->
      <!-- setEtag=false - Specifies whether the HTTP ETag header is calculated and set. The ETag header is used for web cache validation,
           and enables a Web server to not have to send a full response if no changes have been made to the content. Disabling ETags
           causes browsers to use the Last-Modified HTTP header to determine if it has the latest version of the file or not.
           Note: if using < IIS8, add the following line to customHeaders <add name="ETag" value=""/> to have the same effect and remove setEtag from here. -->
      <clientCache cacheControlCustom="public" cacheControlMode="UseMaxAge" cacheControlMaxAge="365.00:00:00" setEtag="false" />

      <!-- MIME types - Add some missing MIME types and also modify others to be more up to date. -->
      <!-- .js - JavaScript files are served as application/x-javascript in IIS 7.5 and below. Use the correct MIME type of application/javascript. See http://stackoverflow.com/questions/9664282/difference-between-application-x-javascript-and-text-javascript-content-types. -->
      <remove fileExtension=".js" />
      <mimeMap fileExtension=".js" mimeType="application/javascript" />
      <!-- .json - IIS does not have a JSON MIME type by default. -->
      <remove fileExtension=".json" />
      <mimeMap fileExtension=".json" mimeType="application/json" />
      <!-- .rss - IIS does not have a RSS MIME type by default. Add the optional charset to the RSS MIME type. See http://www.rssboard.org/rss-mime-type-application.txt. -->
      <remove fileExtension=".rss" />
      <mimeMap fileExtension=".rss" mimeType="application/rss+xml; charset=UTF-8" />
      <!-- .html - Add the optional charset to the HTML MIME type. -->
      <remove fileExtension=".html" />
      <mimeMap fileExtension=".html" mimeType="text/html; charset=UTF-8" />
      <!-- .xml - Add the optional charset to the XML MIME type. -->
      <remove fileExtension=".xml" />
      <mimeMap fileExtension=".xml" mimeType="application/xml; charset=UTF-8" />
      <!-- HTML5 Video - IIS 7.5 and below does not have these MIME types by default. -->
      <remove fileExtension=".mp4" />
      <mimeMap fileExtension=".mp4" mimeType="video/mp4" />
      <remove fileExtension=".m4v" />
      <mimeMap fileExtension=".m4v" mimeType="video/m4v" />
      <remove fileExtension=".ogg" />
      <mimeMap fileExtension=".ogg" mimeType="video/ogg" />
      <remove fileExtension=".ogv" />
      <mimeMap fileExtension=".ogv" mimeType="video/ogg" />
      <remove fileExtension=".webm" />
      <mimeMap fileExtension=".webm" mimeType="video/webm" />
      <!-- HTML5 Audio - IIS 7.5 and below does not have these MIME types by default. -->
      <remove fileExtension=".oga" />
      <mimeMap fileExtension=".oga" mimeType="audio/ogg" />
      <remove fileExtension=".spx" />
      <mimeMap fileExtension=".spx" mimeType="audio/ogg" />
      <!-- .svgz - IIS 7.5 does not have a compressed SVG MIME type by default. -->
      <remove fileExtension=".svgz" />
      <mimeMap fileExtension=".svgz" mimeType="image/svg+xml" />
      <!-- Web Fonts -->
      <!-- .eot - Served as application/octet-stream. Use the correct MIME type of application/vnd.ms-fontobject. -->
      <remove fileExtension=".eot" />
      <mimeMap fileExtension=".eot" mimeType="application/vnd.ms-fontobject" />
      <!-- .ttf - Served as application/octet-stream. Use the correct MIME type of application/application/x-font-ttf. -->
      <remove fileExtension=".ttf" />
      <mimeMap fileExtension=".ttf" mimeType="application/x-font-ttf" />
      <!-- .ttc - IIS does not have a TTC MIME type by default. -->
      <remove fileExtension=".ttc" />
      <mimeMap fileExtension=".ttc" mimeType="application/x-font-ttf" />
      <!-- .otf - IIS does not have a OTF MIME type by default. -->
      <remove fileExtension=".otf" />
      <mimeMap fileExtension=".otf" mimeType="font/otf" />
      <!-- .woff - Served as font/woff. Use the correct MIME type of application/font-woff. -->
      <remove fileExtension=".woff" />
      <mimeMap fileExtension=".woff" mimeType="application/font-woff" />
      <!-- .woff2 - IIS does not have a WOFF2 MIME type by default. -->
      <remove fileExtension=".woff2" />
      <mimeMap fileExtension=".woff2" mimeType="application/font-woff2" />
      <!-- .webp - IIS does not have a WEBP MIME type by default. -->
      <remove fileExtension=".webp" />
      <mimeMap fileExtension=".webp" mimeType="image/webp" />
      <!-- .appcache - IIS does not have a appcache MIME type by default. -->
      <remove fileExtension=".appcache" />
      <mimeMap fileExtension=".appcache" mimeType="text/cache-manifest" />
      <!-- .manifest - IIS does not have a manifest MIME type by default. -->
      <remove fileExtension=".manifest" />
      <mimeMap fileExtension=".manifest" mimeType="text/cache-manifest" />
    </staticContent>
    <validation validateIntegratedModeConfiguration="false" />
    <!-- Enable gzip and deflate HTTP compression. See http://www.iis.net/configreference/system.webserver/urlcompression
         doDynamicCompression - enables or disables dynamic content compression at the site, application, or folder level.
         doStaticCompression - enables or disables static content compression at the site, application, or folder level.
         dynamicCompressionBeforeCache - specifies whether IIS will dynamically compress content that has not been cached.
                                         When the dynamicCompressionBeforeCache attribute is true, IIS dynamically compresses
                                         the response the first time a request is made and queues the content for compression.
                                         Subsequent requests are served dynamically until the compressed response has been
                                         added to the cache directory. Once the compressed response is added to the cache
                                         directory, the cached response is sent to clients for subsequent requests. When
                                         dynamicCompressionBeforeCache is false, IIS returns the uncompressed response until
                                         the compressed response has been added to the cache directory.
                                         Note: This is set to false in Debug mode to enable Browser Link to work when debugging.
                                         The value is set to true in Release mode (See web.Release.config).-->
    <urlCompression doDynamicCompression="true" doStaticCompression="true" dynamicCompressionBeforeCache="false" />
  </system.webServer>
  <!--
  <system.codedom>
    <compilers>
      <compiler language="c#;cs;csharp" extension=".cs" warningLevel="4" type="Microsoft.CSharp.CSharpCodeProvider, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
        <providerOption name="CompilerVersion" value="v3.5"/>
        <providerOption name="WarnAsError" value="false"/>
      </compiler>
    </compilers>
  </system.codedom>
  -->
  <!-- ESAPI configuration -->
  <esapi xmlns="owasp.esapi">
    <!-- Access controller -->
    <accessController type="Owasp.Esapi.AccessController"/>
    <!-- Encoder config -->
    <encoder type="Owasp.Esapi.Encoder">
      <codecs>
        <!-- Codec assemblies-->
        <assemblies>
          <add name="Owasp.Esapi" types="Owasp.Esapi.Codecs.Html.*"/>
        </assemblies>
        <!-- Specific codecs -->
        <add name="Base64" type="Owasp.Esapi.Codecs.Base64Codec"/>
        <add name="JavaScript" type="Owasp.Esapi.Codecs.JavaScriptCodec"/>
        <add name="Url" type="Owasp.Esapi.Codecs.UrlCodec"/>
        <add name="VBScript" type="Owasp.Esapi.Codecs.VbScriptCodec"/>
        <add name="XML" type="Owasp.Esapi.Codecs.XmlCodec"/>
        <add name="XML_ATTRIBUTE" type="Owasp.Esapi.Codecs.XmlAttributeCodec"/>
        <add name="HTML" type="Owasp.Esapi.Codecs.HtmlCodec"/>
        <add name="HTML_ATTRIBUTE" type="Owasp.Esapi.Codecs.HtmlAttributeCodec"/>
      </codecs>
    </encoder>
    <!-- Encryptor config -->
    <encryptor type="Owasp.Esapi.Encryptor"/>
    <!-- Intrusion detector -->
    <intrusionDetector type="Owasp.Esapi.IntrusionDetector">
      <!-- Exception Events -->
      <eventThresholds>
        <add name="test" count="3" interval="10" actions="logout"/>
        <add name="Owasp.Esapi.Errors.IntrusionException" count="1" interval="1" actions="log, disable, logout"/>
        <add name="Owasp.Esapi.Errors.ValidationException" count="10" interval="10" actions="disable"/>
      </eventThresholds>
    </intrusionDetector>
    <!-- Randomizer config -->
    <randomizer type=""/>
    <!-- Validator config -->
    <validator type="">
      <rules>
        <assemblies>
          <add name="Owasp.Esapi" types="Owasp.Esapi.ValidationRules.*"/>
        </assemblies>
      </rules>
    </validator>
    <!-- Http utilities -->
    <httpUtilities type="Owasp.Esapi.HttpUtilities"/>
    <!-- Security config -->
    <securityConfiguration>
      <algorithms encryption="Rijndael" hash="SHA512" random="System.Security.Cryptography.RNGCryptoServiceProvider" digitalSignature="DSA"/>
      <encryption masterPassword="owasp1" masterSalt="saltsalt"/>
      <application characterEncoding="UTF-8" logLevel="ALL" maxFileNameLength="1024" responseContentType="text/html; charset=UTF-8"/>
    </securityConfiguration>
  </esapi>
  <!-- Configure log4net -->
  <log4net>
    <!-- Add an appender of type FileAppender to configure log4net to log messages (error, information, debug etc.) to a text file -->
    <appender name="LogFileAppender" type="log4net.Appender.FileAppender">
      <param name="File" value="App_Data/Log.txt"/>
      <param name="AppendToFile" value="true"/>
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="%d %-5p %c %m%n"/>
      </layout>
    </appender>
    <root>
      <appender-ref ref="LogFileAppender"/>
    </root>
  </log4net>
</configuration>